generator client {
  provider = "prisma-client-js"
}
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(255)
  email       String   @unique(map: "email") @db.VarChar(255)
  password    String?  @db.VarChar(255)
  profilePic  String?  @db.VarChar(255)
  role        Role     @default(USER)
  createdAt   DateTime @default(now()) @db.Timestamp(0)
  updatedAt   DateTime @default(now()) @db.Timestamp(0)
  comments    Comment[]
  favorites   Favorite[]
  ratings     Rating[]
}

enum Role {
  USER
  ADMIN
}


model Wisata {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(255)
  description String    @db.VarChar(255)
  maps        String    @db.VarChar(255)
  provinsi    String    @db.VarChar(255)
  kabupaten   String    @db.VarChar(255)
  kecematan   String    @db.VarChar(255)
  createdAt   DateTime  @default(now()) @db.Timestamp(0)
  updatedAt   DateTime  @default(now()) @db.Timestamp(0)
  coverimg    String    @db.VarChar(255)
  images      Image[]
  comments    Comment[]
  ratings     Rating[]
  favorites   Favorite[]
}

model Image {
  id       Int      @id @default(autoincrement())
  url      String   @db.VarChar(255)
  wisataId Int
  wisata   Wisata   @relation(fields: [wisataId], references: [id])
}

model Comment {
  id       Int      @id @default(autoincrement())
  content  String   @db.VarChar(255)
  userId   Int
  wisataId Int
  createdAt DateTime  @default(now()) @db.Timestamp(0)
  updatedAt DateTime  @default(now()) @db.Timestamp(0)
  user     User      @relation(fields: [userId], references: [id])
  wisata   Wisata    @relation(fields: [wisataId], references: [id])
}

model Favorite {
  id        Int      @id @default(autoincrement())
  userId    Int
  wisataId  Int
  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @default(now()) @db.Timestamp(0)
  user      User     @relation(fields: [userId], references: [id])
  wisata    Wisata   @relation(fields: [wisataId], references: [id])

  @@unique([userId, wisataId])
}


model Rating {
  id       Int     @id @default(autoincrement())
  value    Int
  userId   Int
  wisataId Int
  createdAt DateTime  @default(now()) @db.Timestamp(0)
  updatedAt DateTime  @default(now()) @db.Timestamp(0)
  user     User     @relation(fields: [userId], references: [id])
  wisata   Wisata   @relation(fields: [wisataId], references: [id])
}
